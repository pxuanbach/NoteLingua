{
  "openapi": "3.0.0",
  "info": {
    "title": "NoteLingua API",
    "version": "1.0.0",
    "description": "API documentation for NoteLingua - A vocabulary learning platform",
    "contact": {
      "name": "NoteLingua Team",
      "email": "support@notelingua.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    },
    {
      "url": "https://api.notelingua.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter JWT token in format: Bearer <token>"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "required": true,
            "format": "email"
          },
          "password_hash": {
            "type": "string",
            "minLength": [
              8,
              "Password must be at least 8 characters long"
            ],
            "required": true
          },
          "firstName": {
            "type": "string",
            "maxLength": [
              50,
              "First name cannot exceed 50 characters"
            ],
            "required": true
          },
          "lastName": {
            "type": "string",
            "maxLength": [
              50,
              "Last name cannot exceed 50 characters"
            ],
            "required": true
          },
          "phoneNumber": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin"
            ],
            "default": "user"
          },
          "isActive": {
            "type": "boolean",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created timestamp"
          },
          "id": {
            "type": "string",
            "description": "Reference to  ID",
            "example": "507f1f77bcf86cd799439011"
          }
        },
        "required": [
          "email",
          "password_hash",
          "firstName",
          "lastName"
        ]
      },
      "Vocab": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "Reference to user ID",
            "required": true
          },
          "word": {
            "type": "string",
            "maxLength": [
              100,
              "Word cannot exceed 100 characters"
            ],
            "required": true
          },
          "meaning": {
            "type": "string",
            "maxLength": [
              1000,
              "Meaning cannot exceed 1000 characters"
            ],
            "required": true
          },
          "pronunciation_url": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "source": {
            "type": "string",
            "required": true
          },
          "source_type": {
            "type": "string",
            "enum": [
              "document",
              "package",
              "self"
            ],
            "required": true
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "review_history": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "correct": {
                "type": "boolean",
                "required": true
              }
            },
            "required": [
              "correct"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created timestamp"
          },
          "id": {
            "type": "string",
            "description": "Reference to  ID",
            "example": "507f1f77bcf86cd799439011"
          }
        },
        "required": [
          "user_id",
          "word",
          "meaning",
          "source",
          "source_type"
        ]
      },
      "Document": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "Reference to user ID",
            "required": true
          },
          "file_hash": {
            "type": "string",
            "required": true
          },
          "file_name": {
            "type": "string",
            "maxLength": [
              255,
              "File name cannot exceed 255 characters"
            ],
            "required": true
          },
          "notes": {
            "type": "object",
            "properties": {
              "word": {
                "type": "string",
                "maxLength": [
                  100,
                  "Word cannot exceed 100 characters"
                ],
                "required": true
              },
              "position.page": {
                "type": "number",
                "minimum": 1
              },
              "position.start": {
                "type": "number",
                "minimum": 0
              },
              "position.end": {
                "type": "number",
                "minimum": 0
              },
              "meaning": {
                "type": "string",
                "maxLength": [
                  1000,
                  "Meaning cannot exceed 1000 characters"
                ],
                "required": true
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "source_tag": {
                "type": "string",
                "maxLength": [
                  50,
                  "Source tag cannot exceed 50 characters"
                ]
              }
            },
            "required": [
              "word",
              "meaning"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created timestamp"
          },
          "id": {
            "type": "string",
            "description": "Reference to  ID",
            "example": "507f1f77bcf86cd799439011"
          }
        },
        "required": [
          "user_id",
          "file_hash",
          "file_name"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error type",
            "example": "Validation Error"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Please check your input data"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string",
                  "example": "email"
                },
                "message": {
                  "type": "string",
                  "example": "Please provide a valid email"
                }
              }
            },
            "description": "Validation error details"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "description": "Response data"
          },
          "message": {
            "type": "string",
            "description": "Success message",
            "example": "Operation completed successfully"
          }
        }
      },
      "PaginatedResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Array of data items"
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "description": "Current page number",
                "example": 1
              },
              "limit": {
                "type": "integer",
                "description": "Items per page",
                "example": 10
              },
              "total": {
                "type": "integer",
                "description": "Total items count",
                "example": 100
              },
              "pages": {
                "type": "integer",
                "description": "Total pages count",
                "example": 10
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password",
                  "firstName",
                  "lastName"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "SecurePass123!"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "user",
                      "admin"
                    ],
                    "default": "user",
                    "example": "user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "refresh_token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "SecurePass123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "access_token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "refresh_token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "summary": "Refresh access token",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer refresh token",
            "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Token refreshed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "access_token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "refresh_token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/import": {
      "post": {
        "summary": "Upload and import document",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "document"
                ],
                "properties": {
                  "document": {
                    "type": "string",
                    "format": "binary",
                    "description": "Document file to upload"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document already exists for this user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Document already exists for this user"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Document imported successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Document imported successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "file_hash": {
                          "type": "string",
                          "example": "abc123def456"
                        },
                        "file_name": {
                          "type": "string",
                          "example": "document.pdf"
                        },
                        "file_path": {
                          "type": "string",
                          "example": "uploads/documents/document.pdf"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No file uploaded or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/note": {
      "post": {
        "summary": "Add note to document and sync to vocabulary",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "file_hash",
                  "highlighted_text",
                  "meaning"
                ],
                "properties": {
                  "file_hash": {
                    "type": "string",
                    "description": "Hash of the document file",
                    "example": "abc123def456"
                  },
                  "highlighted_text": {
                    "type": "string",
                    "description": "Text highlighted by user",
                    "example": "vocabulary word"
                  },
                  "meaning": {
                    "type": "string",
                    "description": "Meaning or note for the highlighted text",
                    "example": "A word or phrase used to communicate meaning"
                  },
                  "pronunciation": {
                    "type": "string",
                    "description": "Pronunciation of the highlighted text",
                    "example": "/vəˈkæbjʊləri/"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Tags for categorization",
                    "example": [
                      "language",
                      "learning"
                    ]
                  },
                  "difficulty": {
                    "type": "string",
                    "enum": [
                      "easy",
                      "medium",
                      "hard"
                    ],
                    "description": "Difficulty level of the vocabulary",
                    "example": "medium"
                  },
                  "note_type": {
                    "type": "string",
                    "enum": [
                      "vocabulary",
                      "concept",
                      "summary"
                    ],
                    "description": "Type of note",
                    "example": "vocabulary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note added successfully and vocabulary synced",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Note added and vocabulary synced successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "note": {
                          "$ref": "#/components/schemas/Document"
                        },
                        "vocab": {
                          "$ref": "#/components/schemas/Vocab"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents": {
      "get": {
        "summary": "Get user's documents with pagination",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of documents per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search in document names"
          }
        ],
        "responses": {
          "200": {
            "description": "Documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Document"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}": {
      "get": {
        "summary": "Get document by ID with notes",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Document retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Document"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete document and its associated notes",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Document deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Document and associated notes deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{id}/notes": {
      "get": {
        "summary": "Get all notes for a specific document",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Document ID"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of notes per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Notes retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "highlighted_text": {
                                "type": "string"
                              },
                              "meaning": {
                                "type": "string"
                              },
                              "pronunciation": {
                                "type": "string"
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "difficulty": {
                                "type": "string"
                              },
                              "note_type": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/admin/all": {
      "get": {
        "summary": "Get all documents across all users (Admin only)",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of documents per page"
          },
          {
            "in": "query",
            "name": "user_id",
            "schema": {
              "type": "string"
            },
            "description": "Filter by specific user ID"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search in document names or user emails"
          }
        ],
        "responses": {
          "200": {
            "description": "Documents retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/Document"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "_id": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "role": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/admin/stats": {
      "get": {
        "summary": "Get document statistics (Admin only)",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "timeframe",
            "schema": {
              "type": "string",
              "enum": [
                "daily",
                "weekly",
                "monthly",
                "yearly"
              ],
              "default": "monthly"
            },
            "description": "Time frame for statistics"
          }
        ],
        "responses": {
          "200": {
            "description": "Document statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total_documents": {
                          "type": "integer",
                          "example": 150
                        },
                        "total_notes": {
                          "type": "integer",
                          "example": 1250
                        },
                        "total_users": {
                          "type": "integer",
                          "example": 25
                        },
                        "avg_notes_per_document": {
                          "type": "number",
                          "example": 8.33
                        },
                        "documents_over_time": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date"
                              },
                              "count": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "notes_over_time": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date"
                              },
                              "count": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/admin/{id}": {
      "delete": {
        "summary": "Delete any document (Admin only)",
        "tags": [
          "Documents"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Document deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Document deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "summary": "Get current user profile",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address",
                    "example": "user@example.com"
                  },
                  "current_password": {
                    "type": "string",
                    "description": "Current password (required if changing email or password)",
                    "example": "currentpassword123"
                  },
                  "new_password": {
                    "type": "string",
                    "minLength": 8,
                    "description": "New password (optional)",
                    "example": "newpassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Profile updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or incorrect current password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get all users (Admin only)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of users per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search by email or user ID"
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string",
              "enum": [
                "user",
                "admin"
              ]
            },
            "description": "Filter by user role"
          },
          {
            "in": "query",
            "name": "isActive",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by account status (true for active, false for deactivated)"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/User"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "delete": {
        "summary": "Delete user account (Admin only)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only or cannot delete yourself",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get user by ID (Admin only)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user by ID (Admin only)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email address",
                    "example": "user@example.com"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "user",
                      "admin"
                    ],
                    "description": "User role",
                    "example": "user"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "User active status",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/stats": {
      "get": {
        "summary": "Get current user statistics",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total_vocabularies": {
                          "type": "integer",
                          "example": 150
                        },
                        "total_documents": {
                          "type": "integer",
                          "example": 25
                        },
                        "account_created": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "last_login": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/deactivate": {
      "put": {
        "summary": "Deactivate current user account",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Account deactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Account deactivated successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/change-password": {
      "put": {
        "summary": "Change user password by ID (Admin only)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "newPassword"
                ],
                "properties": {
                  "newPassword": {
                    "type": "string",
                    "minLength": 8,
                    "description": "New password for the user",
                    "example": "newpassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Password changed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/deactivate": {
      "put": {
        "summary": "Deactivate user account by ID (Admin only)",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User account deactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User account deactivated successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/vocabs": {
      "post": {
        "summary": "Create new vocabulary entry",
        "tags": [
          "Vocabularies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "word",
                  "meaning",
                  "source",
                  "source_type"
                ],
                "properties": {
                  "word": {
                    "type": "string",
                    "description": "The vocabulary word",
                    "example": "serendipity"
                  },
                  "meaning": {
                    "type": "string",
                    "description": "Meaning of the word",
                    "example": "The occurrence of pleasant discoveries by accident"
                  },
                  "pronunciation_url": {
                    "type": "string",
                    "description": "Pronunciation URL",
                    "example": "https://forvo.com/word/serendipity"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Tags for categorization",
                    "example": [
                      "noun",
                      "advanced"
                    ]
                  },
                  "source": {
                    "type": "string",
                    "description": "Source name or identifier",
                    "example": "Cambridge Dictionary"
                  },
                  "source_type": {
                    "type": "string",
                    "enum": [
                      "document",
                      "package",
                      "self"
                    ],
                    "description": "Source type of the vocabulary",
                    "example": "self"
                  },
                  "examples": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Example sentences",
                    "example": [
                      "A pleasant serendipity occurred today."
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vocabulary created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Vocabulary created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vocab"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/vocabs/me": {
      "get": {
        "summary": "Get user vocabularies with pagination and filtering",
        "tags": [
          "Vocabularies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "description": "Number of vocabularies per page"
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            },
            "description": "Search in words and meanings"
          },
          {
            "in": "query",
            "name": "tags",
            "schema": {
              "type": "string"
            },
            "description": "Filter by tags (comma-separated)"
          },
          {
            "in": "query",
            "name": "source_type",
            "schema": {
              "type": "string",
              "enum": [
                "document",
                "package",
                "self"
              ]
            },
            "description": "Filter by source type"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "word"
              ],
              "default": "created_at"
            },
            "description": "Sort field"
          },
          {
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Vocabularies retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginatedResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Vocab"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/vocabs/{id}": {
      "get": {
        "summary": "Get vocabulary by ID",
        "tags": [
          "Vocabularies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vocabulary ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Vocabulary retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vocab"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Vocabulary not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update vocabulary",
        "tags": [
          "Vocabularies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vocabulary ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "word": {
                    "type": "string",
                    "description": "The vocabulary word",
                    "example": "serendipity"
                  },
                  "meaning": {
                    "type": "string",
                    "description": "Meaning of the word",
                    "example": "The occurrence of pleasant discoveries by accident"
                  },
                  "pronunciation_url": {
                    "type": "string",
                    "description": "Pronunciation URL",
                    "example": "https://forvo.com/word/serendipity"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Tags for categorization",
                    "example": [
                      "noun",
                      "advanced"
                    ]
                  },
                  "source": {
                    "type": "string",
                    "description": "Source name or identifier",
                    "example": "Cambridge Dictionary"
                  },
                  "source_type": {
                    "type": "string",
                    "enum": [
                      "document",
                      "package",
                      "self"
                    ],
                    "description": "Source type of the vocabulary",
                    "example": "self"
                  },
                  "examples": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Example sentences",
                    "example": [
                      "A pleasant serendipity occurred today."
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vocabulary updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Vocabulary updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vocab"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Vocabulary not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete vocabulary",
        "tags": [
          "Vocabularies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vocabulary ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Vocabulary deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Vocabulary deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Vocabulary not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/vocabs/admin/{id}": {
      "delete": {
        "summary": "Delete any vocabulary (Admin only)",
        "tags": [
          "Vocabularies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vocabulary ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Vocabulary deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Vocabulary deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Vocabulary not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/vocabs/stats/{userId}": {
      "get": {
        "summary": "Get vocabulary statistics for a specific user (Admin only)",
        "tags": [
          "Vocabularies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          },
          {
            "in": "query",
            "name": "timeframe",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "week",
                "month",
                "year"
              ],
              "default": "all"
            },
            "description": "Time frame for statistics"
          }
        ],
        "responses": {
          "200": {
            "description": "User vocabulary statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of vocabularies",
                          "example": 150
                        },
                        "totalReviews": {
                          "type": "integer",
                          "description": "Total number of reviews across all vocabularies",
                          "example": 450
                        },
                        "avgReviewsPerVocab": {
                          "type": "number",
                          "description": "Average number of reviews per vocabulary",
                          "example": 3
                        },
                        "bySourceType": {
                          "type": "object",
                          "description": "Count of vocabularies by source type",
                          "properties": {
                            "document": {
                              "type": "integer",
                              "example": 75
                            },
                            "package": {
                              "type": "integer",
                              "example": 50
                            },
                            "self": {
                              "type": "integer",
                              "example": 25
                            }
                          }
                        },
                        "weeklyBreakdown": {
                          "type": "array",
                          "description": "Weekly breakdown of vocabulary creation for current month",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object",
                                "properties": {
                                  "week": {
                                    "type": "integer"
                                  },
                                  "year": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "count": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "timeframe": {
                          "type": "string",
                          "description": "Time frame used for statistics",
                          "example": "all"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/vocabs/admin/overview": {
      "get": {
        "summary": "Get all users vocabulary overview (Admin only)",
        "tags": [
          "Vocabularies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Users vocabulary overview retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "example": "507f1f77bcf86cd799439011"
                          },
                          "email": {
                            "type": "string",
                            "example": "user@example.com"
                          },
                          "total_vocabularies": {
                            "type": "integer",
                            "example": 150
                          },
                          "last_activity": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access denied - Admin only",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/vocabs/stats": {
      "get": {
        "summary": "Get current user vocabulary statistics",
        "tags": [
          "Vocabularies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "timeframe",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "week",
                "month",
                "year"
              ],
              "default": "all"
            },
            "description": "Time frame for statistics"
          }
        ],
        "responses": {
          "200": {
            "description": "Vocabulary statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of vocabularies",
                          "example": 150
                        },
                        "totalReviews": {
                          "type": "integer",
                          "description": "Total number of reviews across all vocabularies",
                          "example": 450
                        },
                        "avgReviewsPerVocab": {
                          "type": "number",
                          "description": "Average number of reviews per vocabulary",
                          "example": 3
                        },
                        "bySourceType": {
                          "type": "object",
                          "description": "Count of vocabularies by source type",
                          "properties": {
                            "document": {
                              "type": "integer",
                              "example": 75
                            },
                            "package": {
                              "type": "integer",
                              "example": 50
                            },
                            "self": {
                              "type": "integer",
                              "example": 25
                            }
                          }
                        },
                        "weeklyBreakdown": {
                          "type": "array",
                          "description": "Weekly breakdown of vocabulary creation for current month",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "object",
                                "properties": {
                                  "week": {
                                    "type": "integer"
                                  },
                                  "year": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "count": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "timeframe": {
                          "type": "string",
                          "description": "Time frame used for statistics",
                          "example": "all"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid timeframe parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/vocabs/{id}/review": {
      "post": {
        "summary": "Record vocabulary review result",
        "tags": [
          "Vocabularies"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vocabulary ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "correct"
                ],
                "properties": {
                  "correct": {
                    "type": "boolean",
                    "description": "Whether the user answered correctly",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review recorded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Review recorded successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vocab"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Vocabulary not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Documents",
      "description": "Document management and note-taking"
    },
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Vocabularies",
      "description": "Vocabulary management operations"
    }
  ]
}